'use client'

import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'
import { Progress } from '@/components/ui/progress'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'

export default function Training() {
  const [selectedLine, setSelectedLine] = useState('')
  const [progress, setProgress] = useState(0)
  const [isTraining, setIsTraining] = useState(false)

  useEffect(() => {
    let interval: NodeJS.Timeout
    if (isTraining && progress < 100) {
      interval = setInterval(() => {
        setProgress((prevProgress) => {
          const newProgress = prevProgress + 10
          if (newProgress >= 100) {
            setIsTraining(false)
            clearInterval(interval)
          }
          return newProgress
        })
      }, 1000)
    }
    return () => clearInterval(interval)
  }, [isTraining, progress])

  const handleStartTraining = () => {
    if (selectedLine) {
      setProgress(0)
      setIsTraining(true)
    }
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-4">VR Training Simulator</h1> {/*Updated Page Title*/}
      <Card>
        <CardHeader>
          <CardTitle>Production Line Training</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <Select value={selectedLine} onValueChange={setSelectedLine}>
              <SelectTrigger>
                <SelectValue placeholder="Select a production line" />
              </SelectTrigger>
              <SelectContent>
                {Array.from({ length: 150 }, (_, i) => (
                  <SelectItem key={i} value={`line-${i + 1}`}>
                    Production Line {i + 1}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
            <Button onClick={handleStartTraining} disabled={!selectedLine || isTraining}>
              {isTraining ? 'Training in Progress' : 'Start VR Training'}
            </Button>
            {isTraining && (
              <div>
                <Progress value={progress} className="w-full" />
                <p className="text-center mt-2">Training Progress: {progress}%</p>
              </div>
            )}
            {progress === 100 && <p className="text-green-600">VR Training Complete!</p>}
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

